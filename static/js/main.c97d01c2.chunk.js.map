{"version":3,"sources":["components/Records.js","assets/Mortgage.png","assets/Auto.png","assets/Others.png","assets/Personal.png","assets/Student.png","components/Payment.js","assets/characters.png","App.js","index.js"],"names":["Records","props","useState","isShow","setIsShow","total","setTotal","icons","faHome","faCarSide","faUser","faGraduationCap","faHandHoldingUsd","className","record","map","elem","index","loanType","value","principal","toFixed","displayType","thousandSeparator","prefix","loanPayment","parseFloat","interestM","interestBi","icon","typeNum","color","size","type","aria-label","onClick","handleRemove","faTrash","htmlFor","name","onChange","e","target","all_month","reduce","a","b","Payment","setRecord","setAllMonth","isDisable","setIsDisable","setIsRemove","bgImg","Mortgage","Auto","Personal","Student","Others","loan","payments","loanTermMonth","interest","loanApr","x","Math","pow","monthly","totalMInterest","biweekly","bi_apr","get_interest_biweekly","curr","num","useEffect","isSubmit","new_record","total_amount","push","curr_all_month","addRecord","disabled","src","Number","alt","length","id","revised","splice","App","loanTermYear","userValues","setUserValues","setIsSubmit","isReset","setIsReset","type_others","setOthers","data-vi","data-vi-primary","data-vi-accent","onSubmit","preventDefault","loan_amount","others","loan_type","apr","loan_term_year","loan_term_month","charAt","toUpperCase","slice","split","handleSubmit","i","Object","entries","keys","placeholder","autoFocus","min","required","max","onKeyDown","test","key","parseInt","characters","width","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAMe,SAASA,EAAQC,GAAQ,IAAD,EAEXC,oBAAS,GAFE,mBAEhCC,EAFgC,KAExBC,EAFwB,OAGbF,mBAAS,WAHI,mBAGhCG,EAHgC,KAGzBC,EAHyB,KAIjCC,EAAQ,CAACC,IAAQC,IAAWC,IAASC,IAAiBC,KAGxD,OACI,sBAAKC,UAAU,OAAf,UAEKZ,EAAMa,OAAOC,KAAI,SAACC,EAAMC,GAAP,OAClB,8BAECd,EACG,sBAAKU,UAAW,QAAhB,UACA,sBAAKA,UAAU,QAAf,UAAuB,kDAA2B,4BAAG,iCAAwB,KAAjBG,EAAKE,SAAgB,SAASF,EAAKE,SAA1C,YACrD,sBAAKL,UAAU,QAAf,UAAuB,+CAAwB,4BAAG,+BAAM,cAAC,IAAD,CAAcM,MAAOH,EAAKI,UAAUC,QAAQ,GAAIC,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,aAC9J,sBAAKX,UAAU,QAAf,UAAuB,sDAA+B,4BAAG,+BAAM,cAAC,IAAD,CAAcM,MAAOH,EAAKS,YAAYJ,QAAQ,GAAIC,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,aACvK,sBAAKX,UAAU,QAAf,UAAuB,oEAA6C,4BAAG,+BAAM,cAAC,IAAD,CAAcM,OAAQO,WAAWV,EAAKS,YAAYJ,QAAQ,IAAI,GAAGA,QAAQ,GAAIC,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,aAChN,sBAAKX,UAAU,QAAf,UAAuB,2EAAoD,4BAAG,+BAAM,cAAC,IAAD,CAAcM,MAAOH,EAAKW,UAAUN,QAAQ,GAAIC,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,aAC1L,sBAAKX,UAAU,QAAf,UAAuB,yFAAkE,4BAAG,+BAAM,cAAC,IAAD,CAAcM,MAAOH,EAAKY,WAAWP,QAAQ,GAAIC,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,aACzM,sBAAKX,UAAU,QAAf,UAAuB,gEAAyC,4BAAG,+BAAM,cAAC,IAAD,CAAcM,OAAQH,EAAKW,UAAYX,EAAKY,YAAYP,QAAQ,GAAIC,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,aACnM,0BAEC,qBAAKX,UAAW,QAAhB,SACG,sBAAKA,UAAU,QAAf,UACG,cAAC,IAAD,CAAiBgB,KAAMtB,EAAMS,EAAKc,SAAUC,MAAM,UAAUC,KAAK,OACjE,iCAAwB,KAAjBhB,EAAKE,SAAgB,SAASF,EAAKE,SAA1C,cAA8D,cAAC,IAAD,CAAcC,MAAOH,EAAKI,UAAUC,QAAQ,GAAIC,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,SACpK,wBAAQS,KAAK,SAAQpB,UAAU,SAASqB,aAAW,SAASC,QAAS,WAAKlC,EAAMmC,aAAanB,IAA7F,SAAsG,cAAC,IAAD,CAAiBY,KAAMQ,IAASL,KAAK,eAjB5If,MA2BV,qBAAKJ,UAAU,WAAf,SACE,wBAAQA,UAAU,WAAWsB,QAAS,WAAK/B,GAAWD,IAAtD,SAAiEA,EAAQ,QAAQ,mBAEnF,iCACA,sBAAKU,UAAU,WAAf,UACI,uBAAOyB,QAAQ,eAAf,iCACA,yBAAQL,KAAK,SAASM,KAAK,eAAeC,SAAU,SAACC,GAAD,OAAKnC,EAASmC,EAAEC,OAAOvB,QAA3E,UACI,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,wBAAd,6BAGR,oBAAGN,UAAU,UAAb,mBAA8BR,EAA9B,cAA+C,8BAAG,cAAC,IAAD,CAAcc,MAAe,YAARd,EAAmBJ,EAAM0C,UAAUC,QAAO,SAACC,EAAEC,GAAH,OAAQD,EAAEC,IAAG,GAAGzB,QAAQ,IAAKpB,EAAM0C,UAAUC,QAAO,SAACC,EAAEC,GAAH,OAAQD,EAAEC,IAAG,GAAG,GAAGzB,QAAQ,GAAIC,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,MAA3M,gB,UCvD5C,MAA0B,qCCA1B,MAA0B,iCCA1B,MAA0B,mCCA1B,MAA0B,qCCA1B,MAA0B,oCCU1B,SAASuB,EAAQ9C,GAAO,IAAD,EAERC,mBAAS,IAFD,mBAE7BY,EAF6B,KAErBkC,EAFqB,OAGJ9C,mBAAS,IAHL,mBAG7ByC,EAH6B,KAGlBM,EAHkB,OAIF/C,oBAAS,GAJP,mBAI7BgD,EAJ6B,KAIlBC,EAJkB,OAKJjD,oBAAS,GALL,mBAKnBkD,GALmB,WAM9BC,EAAQ,CAACC,EAAUC,EAAMC,EAAUC,EAASC,GAC5CC,EAAO1D,EAAM0D,KACfvC,EAAYM,WAAWiC,EAAKA,MAC5BC,EAAWD,EAAKE,cAChBC,EAAWH,EAAKI,QAAQ,IAAI,GAC5BC,EAAIC,KAAKC,IAAI,EAAIJ,EAAUF,GAC3BO,EAAW/C,EAAU4C,EAAEF,GAAWE,EAAE,GACpCI,EAAiBD,EAAQP,EAAWxC,EACpCf,EAAQe,EAAUgD,EAClBC,EAAWF,EAAQ,EACnBG,EAASX,EAAKI,QAAQ,IAAI,GA8B9B,SAASQ,IAGL,IAFA,IAAIC,EAAOpD,EACPqD,EAAK,EACFD,EAAM,GACXC,IACAD,EAAOA,EAAQA,EAAKF,EAAUD,EAGhC,OADqBA,EAASI,EAAMD,EACdpD,EAiB1B,OArDCsD,qBAAU,WACRzE,EAAM0E,UAAYxB,GAAa,KAC/B,CAAClD,EAAM0E,WAETD,qBAAU,WACTtB,GAAY,MAiDR,gCAEEnD,EAAM0E,WAAazB,GAErB,sBAAKrC,UAAU,SAAf,UACE,sBAAKA,UAAU,aAAf,UACE,mCAAwB,KAAlB8C,EAAKzC,SAAiB,SAAUyC,EAAKzC,SAA3C,YACA,sBAAKL,UAAU,QAAf,UAAuB,qDAA8B,qCAAO,cAAC,IAAD,CAAcM,MAAOgD,EAAQ9C,QAAQ,GAAIC,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,YAC3J,sBAAKX,UAAU,QAAf,UAAuB,yDAAkC,qCAAO,cAAC,IAAD,CAAcM,MAAOC,EAAUC,QAAQ,GAAIC,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,YACjK,sBAAKX,UAAU,QAAf,UAAuB,wDAAiC,qCAAO,cAAC,IAAD,CAAcM,MAAOiD,EAAe/C,QAAQ,GAAIC,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,YACrK,sBAAKX,UAAU,QAAf,UAAuB,wDAAiC,qCAAO,cAAC,IAAD,CAAcM,MAAOd,EAAMgB,QAAQ,GAAIC,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,YAC5J,wBAAQX,UAAU,WAAWsB,QAAS,kBAzDhD,WACE,IAAIyC,EAAY,CACd1D,SAAUyC,EAAKzC,SACfO,YAAa0C,EACbrC,QAAQ6B,EAAK7B,QACbV,UAAWA,EACXO,UAAWyC,EACXxC,WAAY2C,IACZM,aAAaxE,GAEXmE,EAAO1D,EACX0D,EAAKM,KAAKF,GACV5B,EAAUwB,GACV,IAAIO,EAAiBpC,EACrBoC,EAAeD,KAAKX,GACpBlB,EAAY8B,GACZ5B,GAAa,GAyCsC6B,IAAaC,SAAU/B,EAAlE,kCAEF,qBAAKgC,IAAK7B,EAAM8B,OAAOxB,EAAK7B,UAAWsD,IAAKzB,EAAKzC,cAKjDJ,EAAOuE,OAAQ,GAAKnC,GAAc,cAAC,EAAD,CAASpC,OAAQA,EAAQsB,aA9BnE,SAAoBkD,GAClB,IAAIC,EAAUzE,EACdyE,EAAQC,OAAOF,EAAI,GACnBtC,EAAUuC,GACV,IAAIR,EAAiBpC,EACrBoC,EAAeS,OAAOF,EAAI,GAC1BrC,EAAY8B,GACZ3B,GAAY,IAuBgFT,UAAWA,OCpG5F,UAA0B,uC,MCqH1B8C,MA/Gf,WAEE,IAFa,EAGuBvF,mBAClC,CAACyD,KAAM,GACPI,QAAS,GACT7C,SAAU,WACVY,QAAQ,EACR4D,aAAc,GACd7B,cAAc,KATH,mBAGN8B,EAHM,KAGMC,EAHN,OAWmB1F,oBAAS,GAX5B,mBAWNyE,EAXM,KAWIkB,EAXJ,OAYiB3F,oBAAS,GAZ1B,mBAYN4F,EAZM,KAYGC,EAZH,OAaoB7F,mBAAS,IAb7B,mBAaN8F,EAbM,KAaOC,EAbP,KAkCb,OACE,gCACE,wBAAQpF,UAAU,aAAlB,SACE,+BAAI,mBAAGqF,UAAQ,aAAaC,kBAAgB,UAAUC,iBAAe,YAArE,uBAEF,iCACA,uBAAMC,SAAU,SAAC5D,GAAD,OAzBpB,SAAsBA,GACpBA,EAAE6D,iBADoB,MAGwD7D,EAAEC,OAAzE6D,EAHe,EAGfA,YAAaC,EAHE,EAGFA,OAAQC,EAHN,EAGMA,UAAWC,EAHjB,EAGiBA,IAAKC,EAHtB,EAGsBA,eAAgBC,EAHtC,EAGsCA,gBAE5DhB,EAAc,CACZjC,KAAM4C,EAAYpF,MAClB4C,QAAS2C,EAAIvF,MACbD,SAAUsF,EAAQR,EAAYa,OAAO,GAAGC,cAAcd,EAAYe,MAAM,GAAKN,EAAUtF,MAAM6F,MAAM,KAAK,GACxGlF,QAAQ2E,EAAUtF,MAAM6F,MAAM,KAAK,GACnCtB,aAAciB,EAAexF,MAC7B0C,cAAc+C,EAAgBzF,QAEhC0E,GAAY,GACZI,EAAU,IAWagB,CAAaxE,IAAlC,UACE,sBAAK5B,UAAU,UAAf,UACE,uBAAOyB,QAAQ,YAAf,6BACA,wBAAQL,KAAK,OAAOM,KAAK,YAAY+C,GAAG,YAChC9C,SAAU,SAACC,GACToD,GAAY,GACZE,GAAW,GACXH,EAAc,2BAAKD,GAAN,IAAkB,SAAYlD,EAAEC,OAAOvB,MAAM6F,MAAM,KAAK,GAAI,QAAWvE,EAAEC,OAAOvB,MAAM6F,MAAM,KAAK,OAJxH,SAzCU,CAAE,CAAC,SAAW,GAAI,CAAC,KAAO,GAAI,CAAC,SAAW,GAAI,CAAC,QAAU,GAAG,CAAC,OAAS,IA8C7DjG,KAAI,SAACkB,EAAMiF,GAAP,OACb,wBAAgB/F,MAAOgG,OAAOC,QAAQnF,GAAtC,SAA8CkF,OAAOE,KAAKpF,IAA7CiF,QAIG,aAAxBvB,EAAWzE,UACa,SAAxByE,EAAWzE,UACa,YAAxByE,EAAWzE,UACa,aAAxByE,EAAWzE,WACRyD,IAAamB,GACjB,uBAAO7D,KAAK,OAAOM,KAAK,SAAU+E,YAAY,iBAAiBC,WAAS,EACnE/E,SAAU,SAACC,GAAKwD,EAAUxD,EAAEC,OAAOvB,aAK3C,sBAAKN,UAAU,UAAf,UACE,uBAAOyB,QAAQ,cAAf,2BACA,sBAAMzB,UAAU,SAAhB,eACA,uBAAOoB,KAAK,QAAQM,KAAK,cAAc+C,GAAG,cAAckC,IAAI,OAAOC,UAAQ,EAAEjF,SAAU,WAAKqD,GAAY,SAG1G,sBAAKhF,UAAU,UAAf,UACE,uBAAOyB,QAAQ,MAAf,yCACA,uBAAOL,KAAK,QAASM,KAAK,MAAM+C,GAAG,MAAMoC,IAAI,KAAKF,IAAI,IAAIC,UAAQ,EAACjF,SAAU,WAAKqD,GAAY,MAC9F,sBAAMhF,UAAU,UAAhB,kBAEF,sBAAKA,UAAU,UAAf,UACE,+CACA,uBAAOoB,KAAK,SAASpB,UAAU,YAAY0B,KAAK,iBAAiBiF,IAAI,IAAIE,IAAI,KAAKJ,YAAY,OAAOnG,MAAYwE,EAAWD,aAAc+B,UAAQ,EAC1IE,UAAW,SAAAlF,GAAC,MAAI,UAAUmF,KAAKnF,EAAEoF,MAAQpF,EAAE6D,kBAC3C9D,SAAU,SAACC,GAAKoD,GAAY,GACZD,EAAc,2BAAID,GAAL,IACCD,aAAcoC,SAASrF,EAAEC,OAAOvB,OAChC0C,cAA8B,GAAfpB,EAAEC,OAAOvB,YAC9D,sBAAMN,UAAU,KAAhB,kBACA,uBAAOoB,KAAK,SAASpB,UAAU,YAAY0B,KAAK,kBAAkBiF,IAAI,IAAIE,IAAI,MAAMJ,YAAY,QAAQnG,MAAYwE,EAAW9B,cAAe4D,UAAQ,EAC9IE,UAAW,SAAAlF,GAAC,MAAI,UAAUmF,KAAKnF,EAAEoF,MAAQpF,EAAE6D,kBAC3C9D,SAAU,SAACC,GAAKoD,GAAY,GACZD,EAAc,2BAAID,GAAL,IACGD,aAAcjD,EAAEC,OAAOvB,MAAM,GAC7B0C,cAAeiE,SAASrF,EAAEC,OAAOvB,aACzE,sBAAMN,UAAU,KAAhB,kBAGF,wBAAQoB,KAAK,SAASpB,UAAU,WAAhC,uBACA,wBAAQoB,KAAK,QAAQpB,UAAU,YAAYsB,QAAS,WAAKyD,EAAc,2BAAID,GAAL,IAAiBD,aAAc,GAAI7B,cAAe,MAAMkC,GAAW,IAAzI,uBAKApB,GAAY,qBAAK9D,UAAU,aAAaqE,IAAK6C,EAAY3C,IAAI,aAAa4C,MAAM,UAElF,cAAC,EAAD,CAAUrE,KAAOgC,EAAYhB,SAAUA,OAEvC,mCACE,4BAAG,yDACH,mBAAGsD,KAAK,8BAAR,yCC1GRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c97d01c2.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport NumberFormat from 'react-number-format';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome, faCarSide, faUser,  faGraduationCap, faHandHoldingUsd, faTrash} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport  '../style/Records.css'\r\nexport default function Records(props) {\r\n\r\nconst [isShow, setIsShow] = useState(false)\r\nconst [total, setTotal] = useState(\"monthly\")\r\nconst icons = [faHome, faCarSide, faUser,  faGraduationCap, faHandHoldingUsd]\r\n\r\n\r\n    return (\r\n        <div className='list'>\r\n         \r\n            {props.record.map((elem, index)=>(\r\n            <div key={index}> \r\n            \r\n            {isShow ? \r\n                <div className= 'list1'>\r\n                <div className='list2'><span>Type of loans:</span><b><span>{elem.loanType=== ''? 'Others':elem.loanType} </span></b></div>\r\n                <div className='list2'><span>Principal: </span><b><span><NumberFormat value={elem.principal.toFixed(2)} displayType={'text'} thousandSeparator={true} prefix={'$'} /></span></b></div>\r\n                <div className='list2'><span>Monthly payments: </span><b><span><NumberFormat value={elem.loanPayment.toFixed(2)} displayType={'text'} thousandSeparator={true} prefix={'$'} /></span></b></div>\r\n                <div className='list2'><span>Accelerated bi-weekly payments: </span><b><span><NumberFormat value={(parseFloat(elem.loanPayment.toFixed(2))/2).toFixed(2)} displayType={'text'} thousandSeparator={true} prefix={'$'} /></span></b></div>\r\n                <div className='list2'><span>Total interest using monthly payments: </span><b><span><NumberFormat value={elem.interestM.toFixed(2)} displayType={'text'} thousandSeparator={true} prefix={'$'} /></span></b></div>\r\n                <div className='list2'><span>Total interest using accelerated bi-weekly payments: </span><b><span><NumberFormat value={elem.interestBi.toFixed(2)} displayType={'text'} thousandSeparator={true} prefix={'$'} /></span></b></div>\r\n                <div className='list2'><span>Bi-weekly interest savings: </span><b><span><NumberFormat value={(elem.interestM - elem.interestBi).toFixed(2)} displayType={'text'} thousandSeparator={true} prefix={'$'} /></span></b></div>\r\n                <hr/></div>\r\n                \r\n                :<div className= 'list1'>\r\n                    <div className='list2'>\r\n                       <FontAwesomeIcon icon={icons[elem.typeNum]} color=\"#f5df4d\" size=\"lg\"/>\r\n                       <span>{elem.loanType=== ''? 'Others':elem.loanType} loans --- <NumberFormat value={elem.principal.toFixed(2)} displayType={'text'} thousandSeparator={true} prefix={'$'} /></span>\r\n                       <button type='button'className='remove' aria-label=\"remove\" onClick={()=>{props.handleRemove(index)}}><FontAwesomeIcon icon={faTrash} size=\"lg\"/></button>\r\n                    </div>\r\n                </div>}\r\n                \r\n            </div>\r\n            \r\n            ))}\r\n           \r\n                \r\n          \r\n            <div className='list_btn'>\r\n              <button className='btn send' onClick={()=>{setIsShow(!isShow)}}>{isShow? 'Close':'Show Details'}</button>\r\n            </div>\r\n            <form>\r\n            <div className='section '>\r\n                <label htmlFor='payment_type'>Payment Frequency: </label>\r\n                <select type='number' name='payment_type' onChange={(e)=>setTotal(e.target.value)}>\r\n                    <option value=\"monthly\">Monthly</option>\r\n                    <option value=\"accelerated bi-weekly\">Bi-Weekly</option> \r\n                </select>\r\n            </div>\r\n            <p className='section'>Total {total} payments: <b><NumberFormat value={total==='monthly'? props.all_month.reduce((a,b)=> a+b, 0).toFixed(2): (props.all_month.reduce((a,b)=> a+b, 0)/2).toFixed(2)} displayType={'text'} thousandSeparator={true} prefix={'$'} /> </b></p>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Mortgage.ba4e3332.png\";","export default __webpack_public_path__ + \"static/media/Auto.be7d87be.png\";","export default __webpack_public_path__ + \"static/media/Others.649a0511.png\";","export default __webpack_public_path__ + \"static/media/Personal.40497cfc.png\";","export default __webpack_public_path__ + \"static/media/Student.75d0cb1c.png\";","import React, {useState, useEffect} from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nimport Records from './Records'\r\nimport '../style/Payment.css'\r\nimport Mortgage from '../assets/Mortgage.png'\r\nimport Auto from '../assets/Auto.png'\r\nimport Others from '../assets/Others.png'\r\nimport Personal from '../assets/Personal.png'\r\nimport Student from '../assets/Student.png'\r\n\r\nexport default function Payment(props){\r\n  \r\n  const [record, setRecord] = useState([])\r\n  const [all_month, setAllMonth]= useState([])\r\n  const [isDisable, setIsDisable] = useState(false)\r\n  const [isRemove, setIsRemove] = useState(false)\r\n  const bgImg = [Mortgage, Auto, Personal, Student, Others]\r\n  const loan = props.loan\r\n  let principal = parseFloat(loan.loan)\r\n  let payments = loan.loanTermMonth \r\n  let interest = loan.loanApr/100/12\r\n  let x = Math.pow(1 + interest, payments);\r\n  let monthly = (principal*x*interest)/(x-1);\r\n  let totalMInterest = monthly*payments - principal\r\n  let total = principal+totalMInterest\r\n  let biweekly = monthly/2\r\n  let bi_apr = loan.loanApr/100/26\r\n\r\n   useEffect(() => {\r\n     props.isSubmit && setIsDisable(false); \r\n   },[props.isSubmit])\r\n\r\n   useEffect(() => {\r\n    setIsRemove(false)\r\n  })\r\n\r\n  function addRecord(){  \r\n    let new_record ={\r\n      loanType: loan.loanType,\r\n      loanPayment: monthly,\r\n      typeNum:loan.typeNum,\r\n      principal: principal,\r\n      interestM: totalMInterest,\r\n      interestBi: get_interest_biweekly(),\r\n      total_amount:total\r\n    }\r\n    let curr = record\r\n    curr.push(new_record)\r\n    setRecord(curr)\r\n    let curr_all_month = all_month\r\n    curr_all_month.push(monthly)\r\n    setAllMonth(curr_all_month)\r\n    setIsDisable(true)\r\n    \r\n  }\r\n\r\n  function get_interest_biweekly(){\r\n      let curr = principal\r\n      let num= 0\r\n      while (curr >0){\r\n        num++\r\n        curr = curr + (curr*bi_apr) - biweekly   \r\n      }\r\n      let total_interest = biweekly*num + curr\r\n      return total_interest-principal\r\n      \r\n  }\r\n\r\n  \r\n\r\n  function removeLoan(id){\r\n    let revised = record\r\n    revised.splice(id, 1)\r\n    setRecord(revised)\r\n    let curr_all_month = all_month\r\n    curr_all_month.splice(id, 1)\r\n    setAllMonth(curr_all_month)\r\n    setIsRemove(true)\r\n  }\r\n \r\n  \r\n  return(\r\n        <div > \r\n            \r\n        {(props.isSubmit && !isDisable) && \r\n        \r\n        <div className='record'  > \r\n          <div className='info list1'>\r\n            <h2> {loan.loanType === ''? 'Others': loan.loanType} loans</h2>\r\n            <div className='list2'><span>Monthly Payments:</span><span> <NumberFormat value={monthly.toFixed(2)} displayType={'text'} thousandSeparator={true} prefix={'$'} /></span></div>\r\n            <div className='list2'><span>Total principal paid:</span><span> <NumberFormat value={principal.toFixed(2)} displayType={'text'} thousandSeparator={true} prefix={'$'} /></span></div>\r\n            <div className='list2'><span>Total interest paid:</span><span> <NumberFormat value={totalMInterest.toFixed(2)} displayType={'text'} thousandSeparator={true} prefix={'$'} /></span></div>\r\n            <div className='list2'><span>Total amount repaid:</span><span> <NumberFormat value={total.toFixed(2)} displayType={'text'} thousandSeparator={true} prefix={'$'} /></span></div>\r\n            <button className=\"btn send\" onClick={()=> addRecord()} disabled={isDisable}>Save and continue</button>\r\n        </div>\r\n          <img src={bgImg[Number(loan.typeNum)]} alt={loan.loanType}/>  \r\n               \r\n        </div>  \r\n        }\r\n          \r\n        {(record.length >0 && isDisable) && <Records record={record} handleRemove ={removeLoan} all_month={all_month}/> }\r\n                                            \r\n      </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/characters.09dcfb9f.png\";","/* eslint-disable no-useless-escape */\nimport React, {useState} from 'react';\nimport Payment from './components/Payment'\nimport characters from './assets/characters.png'\nimport './App.css';\n\nfunction App() {\n \n  const types_arr = [ {\"Mortgage\":0}, {\"Auto\":1}, {\"Personal\":2}, {\"Student\":3},{\"Others\":4}]\n  const [userValues, setUserValues] = useState(\n    {loan: '',\n    loanApr: '',\n    loanType: 'Mortgage',\n    typeNum:0,\n    loanTermYear: '',\n    loanTermMonth:'',\n  });\n  const [isSubmit, setIsSubmit] = useState(false)\n  const [isReset, setIsReset] = useState(false)\n  const [type_others, setOthers] = useState('')\n  \n  function handleSubmit(e){\n    e.preventDefault()\n    \n    const {loan_amount, others, loan_type, apr, loan_term_year, loan_term_month}= e.target  \n    \n    setUserValues({\n      loan: loan_amount.value,\n      loanApr: apr.value,\n      loanType: others? type_others.charAt(0).toUpperCase()+type_others.slice(1) : loan_type.value.split(',')[0],\n      typeNum:loan_type.value.split(',')[1],\n      loanTermYear: loan_term_year.value,\n      loanTermMonth:loan_term_month.value,\n    })\n    setIsSubmit(true)\n    setOthers('')\n   \n  }\n  \n  \n  return (\n    <div>\n      <header className=\"App-header\">\n        <h1><i data-vi=\"calculator\" data-vi-primary=\"#939597\" data-vi-accent=\"#393e46\" ></i>Loan Calculator</h1>\n      </header>\n      <main>\n      <form onSubmit={(e)=>handleSubmit(e)}>\n        <div className='section'>\n          <label htmlFor='loan_type'>TYPES OF LOANS </label>\n          <select type='text' name='loan_type' id='loan_type'\n                  onChange={(e)=>{\n                    setIsSubmit(false)\n                    setIsReset(false)\n                    setUserValues({ ...userValues, 'loanType': e.target.value.split(',')[0], 'typeNum': e.target.value.split(',')[1]});}}>\n                  {types_arr.map((type, i)=>(\n                    <option key={i} value={Object.entries(type)}>{Object.keys(type)}</option>\n                  ))}\n          </select>\n        \n        {(((userValues.loanType !== \"Mortgage\") &&\n           (userValues.loanType !== \"Auto\") && \n           (userValues.loanType !== \"Student\") &&\n           (userValues.loanType !== \"Personal\"))  \n           && !isSubmit && !isReset) && \n           <input type='text' name='others'  placeholder='Type your loan' autoFocus\n                onChange={(e)=>{setOthers(e.target.value)}}/>} \n                 \n\n          \n        </div>\n        <div className='section'>                       \n          <label htmlFor='loan_amount'>LOAN BALANCE </label>\n          <span className='dollar'>$</span>\n          <input type='float' name='loan_amount' id='loan_amount' min=\"1000\" required  onChange={()=>{setIsSubmit(false)}}/> \n                     \n        </div>\n        <div className='section'>\n          <label htmlFor='apr'>ANNUAL INTEREST RATE (APR) </label>\n          <input type='float'  name='apr' id='apr' max='99' min=\"1\" required onChange={()=>{setIsSubmit(false)}}/>\n          <span className='percent'>%</span>\n        </div>\n        <div className='section'>\n          <label>LOAN TERM </label>  \n          <input type='number' className=\"loan_term\" name='loan_term_year' min=\"1\" max='40' placeholder=\"Year\" value={\"\"|| userValues.loanTermYear} required\n                  onKeyDown={e => /[\\.\\,]$/.test(e.key) && e.preventDefault()}\n                  onChange={(e)=>{setIsSubmit(false);                \n                                  setUserValues({...userValues,\n                                                loanTermYear: parseInt(e.target.value),\n                                                loanTermMonth: e.target.value*12})}}/>\n          <span className=\"or\">y or</span>\n          <input type='number' className=\"loan_term\" name='loan_term_month' min=\"1\" max='480' placeholder=\"Month\" value={\"\"|| userValues.loanTermMonth} required\n                  onKeyDown={e => /[\\.\\,]$/.test(e.key) && e.preventDefault()}\n                  onChange={(e)=>{setIsSubmit(false);  \n                                  setUserValues({...userValues,\n                                                  loanTermYear: e.target.value/12,\n                                                  loanTermMonth: parseInt(e.target.value)})}}/>\n          <span className=\"or\">m</span>  \n          </div>\n      \n        <button type='submit' className=\"btn send\">Calculate</button>   \n        <button type='reset' className=\"btn reset\" onClick={()=>{setUserValues({...userValues, loanTermYear: '', loanTermMonth: ''}); setIsReset(true)}}>Reset</button>\n                                                            \n                                                             \n      </form>\n      \n      {!isSubmit && <img className=\"characters\" src={characters} alt='characters' width='400px'/>}\n      \n      <Payment  loan= {userValues} isSubmit={isSubmit}/>\n      </main>\n      <footer>\n        <p><span>© Hsin Ling Hu  </span></p>\n        <a href=\"mailto:hsinkava11@gmail.com\">hsinkava11@gmail.com</a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}